<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mvp.mapper.ReplyMapper">

	<!-- rno:replyNum  bno:movieId -->

	<!-- 댓글 조회 -->
	<select id="readReply" resultType="com.mvp.model.ReplyVO">
		select replyNum, replyContent, userId, regDate
		from reply where movieId = #{movieId}	
	</select>
	
	<!-- 댓글 작성 -->
	<insert id="writeReply" >
	 insert into
	  reply(movieId, replyContent, userId)
	    values(#{movieId}, #{replyContent}, #{userId})
	</insert>
	
	<select id="checkReply" resultType="integer">
		select replyNum from reply
		where userId = #{userId} and movieId = #{movieId}
	</select>
	
	<!-- 댓글 수정 -->
	<update id="replyUpdate">
	   update reply set replyContent = #{replyContent}
	   where replyNum = #{replyNum}
	</update>
	
	<select id="getUpdateReply" resultType="com.mvp.model.ReplyVO">
		select * from reply
		where replyNum = #{replyNum}
	</select>
	
	
	<!-- 댓글 삭제 -->
	<delete id="replyDelete">
	   delete from reply
	   where replyNum = #{replyNum}
	</delete>


	<!-- 댓글 리스트 뽑기 -->
	<select id="getReplyList" resultType="com.mvp.model.ReplyVO">
		SELECT ra.rating, ra.userId, ra.movieId, re.replyNum, re.regDate, re.replyContent
		FROM rating ra
		LEFT JOIN reply re ON ra.movieId = re.movieId AND ra.userId = re.userId
		WHERE ra.movieId = #{movieId}
		ORDER BY re.regDate DESC
	</select>
	
	<!-- 
	select ra.rating, ra.userId, ra.movieId, re.replyNum, re.regDate, re.replyContent
	from rating ra
	inner join reply re
	on ra.userId = re.userId
	and ra.movieId = #{movieId}
	order by regDate desc
	
	select userId, movieId, regDate, replyContent
	from reply
	where movieId = #{movieId}
	order by regDate desc
	 -->
	
	<select id="getReplyTotal" resultType="int">
  		select count(*)
  		from reply
  		where movieId = #{movieId}  	
  	</select>
	
</mapper>